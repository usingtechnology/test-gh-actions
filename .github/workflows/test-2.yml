name: test-2
on: 
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
  
jobs:
  
  preflight:
    runs-on: ubuntu-latest
    outputs:
      skip: ${{ steps.skipcheck.outputs.test }}  
    steps:
      - id: skipcheck
        run: echo "::set-output skip="${{ github.event.pull_request.draft && github.repository_owner == 'usingtechnology' }}
   
  preflightecho:
    runs-on: ubuntu-latest
    needs: [preflight]
    outputs:
      skip: ${{ steps.skipcheck.outputs.test }}  
    steps:
      - run: |
          echo ${{needs.preflight.outputs}}

  dep1:
    runs-on: ubuntu-latest
    if: github.event.pull_request.draft == false
    steps:
      - name: Run FAILING script
        run: echo Draft
        
  dep2:
    runs-on: ubuntu-latest
    if: github.event.pull_request.draft != false
    steps:
      - name: Run SUCCESS script
        run: echo Ready
        
  dep3:
    runs-on: ubuntu-latest
    needs: [dep1, dep2]
    steps:
      - name: Run SUCCESS script
        run: echo Ready
  
  job:
    runs-on: ubuntu-latest
    if: ${{ always() && contains(join(needs.*.result, ','), 'success') }}
    needs: [dep1, dep2, preflight]
    steps:
      - name: Hello World        
        env:
          NEEDS: ${{ toJSON(needs) }}     
        run: |
          echo "$NEEDS"
  nextjob:
    runs-on: ubuntu-latest
    if: ${{ always() }}
    needs: [job]
    steps:
      - name: Hello World        
        env:
          NEEDS: ${{ toJSON(needs) }}     
        run: |
          echo "$NEEDS"
  
  draftjob:
    runs-on: ubuntu-latest
    if: ${{ always() && needs.preflight.outputs.skip == true }}
    needs: [job, preflight]
    steps:
      - name: Hello World        
        env:
          NEEDS: ${{ toJSON(needs) }}     
        run: |
          echo "$NEEDS"
  
  readyjob:
    runs-on: ubuntu-latest
    if: ${{ always() && needs.preflight.outputs.skip == false }}
    needs: [job, preflight]
    steps:
      - name: Hello World        
        env:
          NEEDS: ${{ toJSON(needs) }}     
        run: |
          echo "$NEEDS"
